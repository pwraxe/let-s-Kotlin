- we can write main() fun without any param from kotlin version 1.3
- when you declare any variable that will be NotNull by default i.e you cannot store null init hence Kotlin Saves from NullPointerException mostly
- to making variable nullable '?' is imp Ex. var name : String? = null
- In Inheritance : if any class wants to extends then open it, and method wants override then open it. 
- In Kotlin any class and method inside class is final by default
- No need to define var keyword in sub class Constructor if you wants to send that param to super class
- Kotlin uses '==' for structural comparison and '===' for referential comparison.
- Only One companion object is allowed in single kotlin class
- In listOf() >
    val list = listOf(...)
      1. list.any { condition } => return true if any element in list which satisfies our conditions    //work like ||
      2. list.all { condition } => return true if all element in list which satisfies our conditions    //work like &&
      3. list.none {condition } => return true if none of element in list which satisfies our condition //work like !
